namespace = nickname_event

nickname_event.1 = {
	type = character_event
	title = nickname_event.1.t
	desc = nickname_event.1.desc
	theme = court
	left_portrait = {
		character = scope:recipient
		animation = personality_bold
	}

	immediate = {
		hidden_effect = {
			scope:recipient = {
				if = {
					limit = {
						has_any_nickname = yes
					}
					remove_nickname = yes
				}
			}
		}
	}

	widget = {
		gui = "mod_event_window_widget_enter_nickname"
		container = "dynamic_birth_name"
		controller = {
			type = text
			data = {
				key = nickname_text
				default = {
					localization_key = nickname_1
				}
			}
		}
		setup_scope = {
			scope:recipient = { save_scope_as = text_target }
		}
	}

	option = { 
		name = nickname.1.a
	}

	after = {
		scope:recipient = {
			set_variable = {
				name = nickname_text
				value = flag:custom
			}
			hidden_effect = {
				set_nickname_effect = { NICKNAME = nickname_2 }
			}
			store_localized_text_in_death = nickname_text
		}
		scope:actor = {
			trigger_event = nickname_event.2
		}
	}
}

nickname_event.2 = {
	type = character_event
	title = nickname_event.2.t
	desc = nickname_event.2.desc
	theme = court
	left_portrait = {
		character = scope:recipient
		animation = personality_bold
	}

	widget = {
		gui = "mod_event_window_widget_enter_nickname_desc"
		container = "dynamic_birth_name"
		controller = {
			type = text
			data = {
				key = nickname_desc_text
				default = {
					localization_key = nickname_1_desc
				}
			}
		}
		setup_scope = {
			scope:recipient = { save_scope_as = text_target }
		}
	}

	option = { 
		name = nickname.2.a
	}

	after = {
		scope:recipient = {
			set_variable = {
				name = nickname_desc_text
				value = flag:custom
			}
			hidden_effect = {
				set_nickname_effect = { NICKNAME = nickname_2_desc }
			}
			store_localized_text_in_death = nickname_desc_text
		}
	}
}
